// THIS FILE IS AUTOMATICALLY GENERATED
// PLEASE CHECK OUT `generate_libc.py` TO REGENERATE IT

#include "platform.h"
extern ABI_ATTR void * __memset_chk_impl(void *, int, size_t, size_t);
extern ABI_ATTR int __FD_ISSET_chk_impl(int, const fd_set *, size_t);
extern ABI_ATTR void __FD_CLR_chk_impl(int, fd_set *, size_t);
extern ABI_ATTR void __FD_SET_chk_impl(int, fd_set *, size_t);
extern ABI_ATTR char * __fgets_chk_impl(char *, int, FILE *, size_t);
extern ABI_ATTR size_t __fread_chk_impl(void *, size_t, size_t, FILE *, size_t);
extern ABI_ATTR size_t __fwrite_chk_impl(const void *, size_t, size_t, FILE *, size_t);
extern ABI_ATTR char * __getcwd_chk_impl(char *, size_t, size_t);
extern ABI_ATTR void * __memchr_chk_impl(const void *, int, size_t, size_t);
extern "C" ABI_ATTR void * __memmove_chk_impl(void *, const void *, size_t, size_t);
extern "C" ABI_ATTR void * __memcpy_chk_fail_impl(void *, const void *, size_t, size_t);
extern ABI_ATTR void * __memrchr_chk_impl(const void *, int, size_t, size_t);
extern "C" ABI_ATTR void * __memset_chk_fail_impl(void *, int, size_t, size_t);
extern ABI_ATTR int __poll_chk_impl(pollfd *, nfds_t, int, size_t);
extern ABI_ATTR int __ppoll_chk_impl(pollfd *, nfds_t, const timespec *, const sigset_t *, size_t);
extern ABI_ATTR int __ppoll64_chk_impl(pollfd *, nfds_t, const timespec *, const sigset_t *, size_t);
extern ABI_ATTR ssize_t __pread64_chk_impl(int, void *, size_t, off64_t, size_t);
extern ABI_ATTR ssize_t __pread_chk_impl(int, void *, size_t, off_t, size_t);
extern ABI_ATTR ssize_t __pwrite64_chk_impl(int, const void *, size_t, off64_t, size_t);
extern ABI_ATTR ssize_t __pwrite_chk_impl(int, const void *, size_t, off_t, size_t);
extern ABI_ATTR ssize_t __read_chk_impl(int, void *, size_t, size_t);
extern ABI_ATTR ssize_t __readlinkat_chk_impl(int, const char *, char *, size_t, size_t);
extern ABI_ATTR ssize_t __readlink_chk_impl(const char *, char *, size_t, size_t);
extern ABI_ATTR ssize_t __recvfrom_chk_impl(int, void *, size_t, size_t, int, sockaddr *, socklen_t *);
extern ABI_ATTR ssize_t __sendto_chk_impl(int, const void *, size_t, size_t, int, const struct sockaddr *, socklen_t);
extern "C" ABI_ATTR char * __stpcpy_chk_impl(char *, const char *, size_t);
extern "C" ABI_ATTR char * __stpncpy_chk_impl(char *, const char *, size_t, size_t);
extern ABI_ATTR char * __stpncpy_chk2_impl(char *, const char *, size_t, size_t, size_t);
extern "C" ABI_ATTR void __strcat_chk_fail_impl(size_t);
extern ABI_ATTR char * __strchr_chk_impl(const char *, int, size_t);
extern "C" ABI_ATTR void __strcpy_chk_fail_impl(size_t);
extern ABI_ATTR size_t __strlcat_chk_impl(char *, const char *, size_t, size_t);
extern ABI_ATTR size_t __strlcpy_chk_impl(char *, const char *, size_t, size_t);
extern ABI_ATTR size_t __strlen_chk_impl(const char *, size_t);
extern ABI_ATTR char * __strncat_chk_impl(char *, const char *, size_t, size_t);
extern "C" ABI_ATTR char * __strncpy_chk_impl(char *, const char *, size_t, size_t);
extern ABI_ATTR char * __strncpy_chk2_impl(char *, const char *, size_t, size_t, size_t);
extern ABI_ATTR char * __strrchr_chk_impl(const char *, int, size_t);
extern ABI_ATTR mode_t __umask_chk_impl(mode_t);
extern "C" ABI_ATTR int __vsnprintf_chk_impl(char *, size_t, int, size_t, const char *, va_list);
extern "C" ABI_ATTR int __snprintf_chk_impl(char *, size_t, int, size_t, const char *, ...);
extern "C" ABI_ATTR int __vsprintf_chk_impl(char *, int, size_t, const char *, va_list);
extern "C" ABI_ATTR int __sprintf_chk_impl(char *, int, size_t, const char *, ...);
extern ABI_ATTR ssize_t __write_chk_impl(int, const void *, size_t, size_t);
extern "C" ABI_ATTR char * __strcat_chk_impl(char *, const char *, size_t);
extern "C" ABI_ATTR char * __strcpy_chk_impl(char *, const char *, size_t);
extern "C" ABI_ATTR void * __memcpy_chk_impl(void *, const void *, size_t, size_t);
extern "C" ABI_ATTR void * __mempcpy_chk_impl(void *, const void *, size_t, size_t);
extern "C" ABI_ATTR int __fpclassifyd_impl(double);
extern "C" ABI_ATTR int __fpclassifyf_impl(float);
extern "C" ABI_ATTR int __isinf_impl(double);
extern "C" ABI_ATTR int __isinff_impl(float);
extern "C" ABI_ATTR int __isnan_impl(double);
extern "C" ABI_ATTR int __isnanf_impl(float);
extern "C" ABI_ATTR int __isfinite_impl(double);
extern "C" ABI_ATTR int __isfinitef_impl(float);
extern "C" ABI_ATTR int __isnormalf_impl(float);
extern "C" ABI_ATTR int __fpclassifyl_impl(long double);
extern "C" ABI_ATTR int __isinfl_impl(long double);
extern "C" ABI_ATTR int __isnanl_impl(long double);
extern "C" ABI_ATTR int __isfinitel_impl(long double);
extern "C" ABI_ATTR int __isnormall_impl(long double);
extern "C" ABI_ATTR int __isnormal_impl(double);
extern "C" ABI_ATTR int __fpclassify_impl(double);
extern "C" ABI_ATTR int isinf_impl(double);
extern "C" ABI_ATTR int isinff_impl(float);
extern "C" ABI_ATTR int isnan_impl(double);
extern "C" ABI_ATTR int isnanf_impl(float);
extern "C" ABI_ATTR int isfinite_impl(double);
extern "C" ABI_ATTR int isfinitef_impl(float);
extern "C" ABI_ATTR int isnormal_impl(double);
extern "C" ABI_ATTR int isnormalf_impl(float);
extern "C" ABI_ATTR int isinfl_impl(long double);
extern "C" ABI_ATTR int isnanl_impl(long double);
extern "C" ABI_ATTR int isfinitel_impl(long double);
extern "C" ABI_ATTR int isnormall_impl(long double);
extern ABI_ATTR BIONIC_FILE * fopen_impl(const char *, const char *);
extern ABI_ATTR BIONIC_FILE * fopen64_impl(const char *, const char *);
extern ABI_ATTR BIONIC_FILE * fdopen_impl(int, const char *);
extern ABI_ATTR BIONIC_FILE * freopen_impl(const char *, const char *, BIONIC_FILE *);
extern ABI_ATTR BIONIC_FILE * freopen64_impl(const char *, const char *, BIONIC_FILE *);
extern ABI_ATTR BIONIC_FILE * funopen_impl(const void *, int (*)(void *, char *, int), int (*)(void *, const char *, int), off_t (*)(void *, off_t, int), int (*)(void *));
extern ABI_ATTR BIONIC_FILE * fmemopen_impl(void *, size_t, const char *);
extern ABI_ATTR BIONIC_FILE * open_memstream_impl(char **, size_t *);
extern ABI_ATTR BIONIC_FILE * open_wmemstream_impl(wchar_t **, size_t *);
extern ABI_ATTR int fclose_impl(BIONIC_FILE *);
extern ABI_ATTR BIONIC_FILE * popen_impl(const char *, const char *);
extern ABI_ATTR BIONIC_FILE * tmpfile_impl();
extern ABI_ATTR BIONIC_FILE * tmpfile64_impl();
extern ABI_ATTR int fscanf_impl(BIONIC_FILE *, const char *, ...);
extern ABI_ATTR int fprintf_impl(BIONIC_FILE *, const char *, ...);
extern ABI_ATTR int printf_impl(const char *, ...);
extern ABI_ATTR int sprintf_impl(char *, const char *, ...);
extern ABI_ATTR int snprintf_impl(char *, int, const char *, ...);
extern ABI_ATTR int vsnprintf_impl(char *, int, const char *, va_list);
extern ABI_ATTR int vsprintf_impl(char *, const char *, va_list);
extern ABI_ATTR int vasprintf_impl(char **, const char *, va_list);
extern ABI_ATTR int asprintf_impl(char **, const char *, ...);
extern ABI_ATTR int sscanf_impl(const char *, const char *, ...);
extern ABI_ATTR int vprintf_impl(const char *, va_list);
extern ABI_ATTR size_t strlcat_impl(char *, const char *, size_t);
extern ABI_ATTR size_t strlcpy_impl(char *, const char *, size_t);
extern ABI_ATTR int swprintf_impl(wchar_t *, size_t, const wchar_t *, ...);
extern "C" ABI_ATTR char * asctime64_impl(const struct tm *);
extern "C" ABI_ATTR char * asctime64_r_impl(const struct tm *, char *);
extern "C" ABI_ATTR char * ctime64_impl(const Time64_T *);
extern "C" ABI_ATTR char * ctime64_r_impl(const Time64_T *, char *);
extern "C" ABI_ATTR struct tm * gmtime64_impl(const Time64_T *);
extern "C" ABI_ATTR struct tm * localtime64_impl(const Time64_T *);
extern "C" ABI_ATTR struct tm * localtime64_r_impl(const Time64_T *, struct tm *);
extern "C" ABI_ATTR Time64_T mktime64_impl(const struct tm *);
extern "C" ABI_ATTR Time64_T timegm64_impl(const struct tm *);
extern "C" ABI_ATTR Time64_T timelocal64_impl(const struct tm *);
extern ABI_ATTR struct tm * fake_localtime_r_impl(const time_t *, struct tm *);
extern ABI_ATTR struct tm * fake_gmtime_r_impl(const time_t *, struct tm *);
extern ABI_ATTR struct tm * gmtime64_r_impl(const Time64_T *, struct tm *);
extern ABI_ATTR pthread_t pthread_self_impl();
extern ABI_ATTR int pthread_key_create_impl(pthread_key_t *, void (*)(void *));
extern ABI_ATTR int pthread_key_delete_impl(pthread_key_t);
extern ABI_ATTR int pthread_setspecific_impl(pthread_key_t, const void *);
extern ABI_ATTR void * pthread_getspecific_impl(pthread_key_t);
extern ABI_ATTR int pthread_mutex_init_impl(BIONIC_pthread_mutex_t *, pthread_mutexattr_t **);
extern ABI_ATTR int pthread_mutex_destroy_impl(BIONIC_pthread_mutex_t *);
extern ABI_ATTR int pthread_mutex_lock_impl(BIONIC_pthread_mutex_t *);
extern ABI_ATTR int pthread_mutex_unlock_impl(BIONIC_pthread_mutex_t *);
extern ABI_ATTR int pthread_cond_init_impl(pthread_cond_t **, const int *);
extern ABI_ATTR int pthread_cond_broadcast_impl(pthread_cond_t **);
extern ABI_ATTR int pthread_cond_signal_impl(pthread_cond_t **);
extern ABI_ATTR int pthread_cond_destroy_impl(pthread_cond_t **);
extern ABI_ATTR int pthread_cond_wait_impl(pthread_cond_t **, BIONIC_pthread_mutex_t *);
extern ABI_ATTR int pthread_cond_timedwait_impl(pthread_cond_t **, BIONIC_pthread_mutex_t *, const struct timespec *);
extern ABI_ATTR int pthread_once_impl(volatile int *, void (*)());
extern ABI_ATTR int pthread_create_impl(pthread_t *, const void *, void *(*)(void *), void *);
extern ABI_ATTR int pthread_mutexattr_init_impl(pthread_mutexattr_t **);
extern ABI_ATTR int pthread_mutexattr_settype_impl(pthread_mutexattr_t **, int);
extern ABI_ATTR int pthread_mutexattr_destroy_impl(pthread_mutexattr_t **);
extern ABI_ATTR int pthread_join_impl(pthread_t, void **);
extern ABI_ATTR int pthread_attr_getstackaddr_impl(const pthread_attr_t *, void **);
extern ABI_ATTR int pthread_attr_setstackaddr_impl(pthread_attr_t *, void *);
extern ABI_ATTR int __aeabi_atexit_impl(void *, void (*)(void *), void *);
extern ABI_ATTR void __aeabi_memcpy8_impl(void *, const void *, size_t);
extern ABI_ATTR void __aeabi_memcpy4_impl(void *, const void *, size_t);
extern ABI_ATTR void __aeabi_memcpy_impl(void *, const void *, size_t);
extern ABI_ATTR void __aeabi_memmove8_impl(void *, const void *, size_t);
extern ABI_ATTR void __aeabi_memmove4_impl(void *, const void *, size_t);
extern ABI_ATTR void __aeabi_memmove_impl(void *, const void *, size_t);
extern ABI_ATTR void __aeabi_memset8_impl(void *, size_t, int);
extern ABI_ATTR void __aeabi_memset4_impl(void *, size_t, int);
extern ABI_ATTR void __aeabi_memset_impl(void *, size_t, int);
extern ABI_ATTR void __aeabi_memclr8_impl(void *, size_t);
extern ABI_ATTR void __aeabi_memclr4_impl(void *, size_t);
extern ABI_ATTR void __aeabi_memclr_impl(void *, size_t);
extern "C" ABI_ATTR int login_tty_impl(int);
extern "C" ABI_ATTR long syscall_impl(long, ...);
extern "C" ABI_ATTR void abort_impl();
extern "C" ABI_ATTR void * dlopen_impl(const char *, int);
extern "C" ABI_ATTR char * dlerror_impl();
extern "C" ABI_ATTR int dlclose_impl(void *);
extern "C" ABI_ATTR void * dlsym_impl(void *, const char *);
extern "C" ABI_ATTR const void * memchr_impl(const void *, int, size_t);
extern "C" ABI_ATTR int sigsetmask_impl(int);
extern "C" ABI_ATTR char * tempnam_impl(const char *, const char *);
extern "C" ABI_ATTR char * tmpnam_impl(char *);
extern "C" ABI_ATTR char * mktemp_impl(char *);
extern "C" ABI_ATTR int * __errno_impl();
extern "C" ABI_ATTR int __android_log_write_impl(int, const char *, const char *);
extern "C" ABI_ATTR int __android_log_print_impl(int, const char *, const char *, ...);
extern "C" ABI_ATTR int __android_log_vprint_impl(int, const char *, const char *, va_list);
extern "C" ABI_ATTR void android_set_abort_message_impl(const char *);
extern "C" ABI_ATTR int __system_property_get_impl(const char *, char *);
extern "C" ABI_ATTR int __open_2_impl(const char *, int);
extern ABI_ATTR int scandirat_impl(int, const char *, struct bionic_dirent ***, int (*)(const struct bionic_dirent *), int (*)(const struct bionic_dirent **, const struct bionic_dirent **));
extern ABI_ATTR int scandir_impl(const char *, struct bionic_dirent ***, int (*)(const struct bionic_dirent *), int (*)(const struct bionic_dirent **, const struct bionic_dirent **));
